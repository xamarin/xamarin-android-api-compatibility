<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="Mono.Security" version="2.0.5.0">
    <attributes>
      <attribute name="System.CLSCompliantAttribute">
        <properties>
          <property name="IsCompliant" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Diagnostics.DebuggableAttribute">
        <properties>
          <property name="IsJITTrackingEnabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="IsJITOptimizerDisabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="DebuggingFlags" value="IgnoreSymbolStoreSequencePoints" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCompanyAttribute">
        <properties>
          <property name="Company" value="MONO development team" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCopyrightAttribute">
        <properties>
          <property name="Copyright" value="(c) 2003-2004 Various Authors" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDescriptionAttribute">
        <properties>
          <property name="Description" value="Mono.Security.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyProductAttribute">
        <properties>
          <property name="Product" value="MONO CLI" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyTitleAttribute">
        <properties>
          <property name="Title" value="Mono.Security.dll" />
        </properties>
      </attribute>
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute">
        <properties>
          <property name="CultureName" value="en-US" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
        <properties>
          <property name="CompilationRelaxations" value="8" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="System, PublicKey=00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute">
        <properties>
          <property name="Value" value="False" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="Mono.Math">
        <classes>
          <class name="BigInteger" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Math.BigInteger)" attrib="6278">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="inData" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ui" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32[])" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="inData" position="0" attrib="0" type="System.UInt32[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt64)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ul" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Math.BigInteger+Sign, System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="sign" position="0" attrib="0" type="Mono.Math.BigInteger+Sign" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Math.BigInteger, System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Add(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="BitCount()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="ClearBit(System.UInt32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Compare(Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger+Sign">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Divid(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Divid(Mono.Math.BigInteger, System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GCD(Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="GeneratePseudoPrime(System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GenerateRandom(System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GenerateRandom(System.Int32, System.Security.Cryptography.RandomNumberGenerator)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rng" position="1" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Incr2()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="IsProbablePrime()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="LowestSetBit()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ModInverse(Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="modulus" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="ModPow(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="exp" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="n" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Modulus(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Modulus(Mono.Math.BigInteger, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Modulus(Mono.Math.BigInteger, System.UInt32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Multiply(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Multiply(Mono.Math.BigInteger, System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NextHighestPrime(Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="number" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Randomize()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Randomize(System.Security.Cryptography.RandomNumberGenerator)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="rng" position="0" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                </parameters>
              </method>
              <method name="SetBit(System.UInt32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="SetBit(System.UInt32, System.Boolean)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="value" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Subtract(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="TestBit(System.Int32)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TestBit(System.UInt32)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.UInt32)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="radix" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToString(System.UInt32, System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="radix" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="characterSet" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="op_Addition(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Division(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Division(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Equality(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Equality(Mono.Math.BigInteger, System.UInt32)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_GreaterThan(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt64)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Math.BigInteger, System.UInt32)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_LeftShift(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="shiftVal" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_LessThan(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Modulus(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Modulus(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Modulus(Mono.Math.BigInteger, System.UInt32)" attrib="2198" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Multiply(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Multiply(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_RightShift(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="shiftVal" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Subtraction(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="ModulusRing" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(Mono.Math.BigInteger)" attrib="6278">
                    <parameters>
                      <parameter name="modulus" position="0" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </constructor>
                </constructors>
                <methods>
                  <method name="BarrettReduction(Mono.Math.BigInteger)" attrib="134" returntype="System.Void">
                    <parameters>
                      <parameter name="x" position="0" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Difference(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <parameters>
                      <parameter name="a" position="0" attrib="0" type="Mono.Math.BigInteger" />
                      <parameter name="b" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Multiply(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <parameters>
                      <parameter name="a" position="0" attrib="0" type="Mono.Math.BigInteger" />
                      <parameter name="b" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Pow(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <parameters>
                      <parameter name="a" position="0" attrib="0" type="Mono.Math.BigInteger" />
                      <parameter name="k" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Pow(System.UInt32, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <attributes>
                      <attribute name="System.CLSCompliantAttribute">
                        <properties>
                          <property name="IsCompliant" value="False" />
                        </properties>
                      </attribute>
                    </attributes>
                    <parameters>
                      <parameter name="b" position="0" attrib="0" type="System.UInt32" />
                      <parameter name="exp" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="Sign" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="Negative" attrib="32854" fieldtype="Mono.Math.BigInteger+Sign" value="-1" />
                  <field name="Positive" attrib="32854" fieldtype="Mono.Math.BigInteger+Sign" value="1" />
                  <field name="Zero" attrib="32854" fieldtype="Mono.Math.BigInteger+Sign" value="0" />
                </fields>
              </class>
            </classes>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Math.Prime">
        <classes>
          <class name="ConfidenceFactor" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ExtraHigh" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="4" />
              <field name="ExtraLow" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="0" />
              <field name="High" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="3" />
              <field name="Low" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="1" />
              <field name="Medium" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="2" />
              <field name="Provable" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="5" />
            </fields>
          </class>
          <class name="PrimalityTest" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PrimalityTests" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="RabinMillerTest(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
              <method name="SmallPrimeSppTest(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
              <method name="Test(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Math.Prime.Generator">
        <classes>
          <class name="NextPrimeFinder" type="class" base="Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GenerateSearchBase(System.Int32, System.Object)" attrib="196" virtual="true" is-override="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="Context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PrimeGeneratorBase" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Confidence" attrib="0" ptype="Mono.Math.Prime.ConfidenceFactor">
                <methods>
                  <method name="get_Confidence()" attrib="2502" virtual="true" returntype="Mono.Math.Prime.ConfidenceFactor">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PrimalityTest" attrib="0" ptype="Mono.Math.Prime.PrimalityTest">
                <methods>
                  <method name="get_PrimalityTest()" attrib="2502" virtual="true" returntype="Mono.Math.Prime.PrimalityTest">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrialDivisionBounds" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_TrialDivisionBounds()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GenerateNewPrime(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PostTrialDivisionTests(Mono.Math.BigInteger)" attrib="132" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SequentialSearchPrimeGeneratorBase" type="class" base="Mono.Math.Prime.Generator.PrimeGeneratorBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GenerateNewPrime(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GenerateNewPrime(System.Int32, System.Object)" attrib="454" virtual="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GenerateSearchBase(System.Int32, System.Object)" attrib="452" virtual="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="IsPrimeAcceptable(Mono.Math.BigInteger, System.Object)" attrib="452" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security">
        <classes>
          <class name="ASN1" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte)" attrib="6278">
                <parameters>
                  <parameter name="tag" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte, System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="tag" position="0" attrib="0" type="System.Byte" />
                  <parameter name="data" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.ASN1" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.ASN1">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Tag" attrib="0" ptype="System.Byte">
                <methods>
                  <method name="get_Tag()" attrib="2182" returntype="System.Byte">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Value(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(Mono.Security.ASN1)" attrib="134" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="CompareValue(System.Byte[])" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Decode(System.Byte[], System.Int32&amp;, System.Int32)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="anPos" position="1" attrib="0" type="System.Int32" direction="ref" />
                  <parameter name="anLength" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="DecodeTLV(System.Byte[], System.Int32&amp;, out System.Byte&amp;, out System.Int32&amp;, out System.Byte[]&amp;)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="pos" position="1" attrib="0" type="System.Int32" direction="ref" />
                  <parameter name="tag" position="2" attrib="2" type="System.Byte" direction="out" />
                  <parameter name="length" position="3" attrib="2" type="System.Int32" direction="out" />
                  <parameter name="content" position="4" attrib="2" type="System.Byte[]" direction="out" />
                </parameters>
              </method>
              <method name="Element(System.Int32, System.Byte)" attrib="134" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="anTag" position="1" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Equals(System.Byte[])" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="SaveToFile(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ASN1Convert" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="FromDateTime(System.DateTime)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="dt" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="FromInt32(System.Int32)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromOid(System.String)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromUnsignedBigInteger(System.Byte[])" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="big" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ToDateTime(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="ToInt32(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="ToOid(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PKCS7" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="AlgorithmIdentifier(System.String)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="AlgorithmIdentifier(System.String, Mono.Security.ASN1)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                  <parameter name="parameters" position="1" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="Attribute(System.String, Mono.Security.ASN1)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="IssuerAndSerialNumber(Mono.Security.X509.X509Certificate)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="ContentInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String)" attrib="6278">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Content" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_Content()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                      <method name="set_Content(Mono.Security.ASN1)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="Mono.Security.ASN1" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="ContentType" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_ContentType()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_ContentType(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="EncryptedData" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="ContentInfo" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_ContentInfo()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptedContent" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_EncryptedContent()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptionAlgorithm" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_EncryptionAlgorithm()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="EnvelopedData" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="ContentInfo" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_ContentInfo()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptedContent" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_EncryptedContent()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptionAlgorithm" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_EncryptionAlgorithm()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="RecipientInfos" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_RecipientInfos()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="Oid" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <fields>
                  <field name="contentType" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.3" />
                  <field name="countersignature" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.6" />
                  <field name="data" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.1" />
                  <field name="digestedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.5" />
                  <field name="encryptedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.6" />
                  <field name="envelopedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.3" />
                  <field name="messageDigest" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.4" />
                  <field name="rsaEncryption" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.1.1" />
                  <field name="signedAndEnvelopedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.4" />
                  <field name="signedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.2" />
                  <field name="signingTime" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.5" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="RecipientInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Issuer" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Issuer()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Key" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Key()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Oid" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Oid()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Serial" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Serial()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="SubjectKeyIdentifier" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SubjectKeyIdentifier()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
              </class>
              <class name="SignedData" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                    <methods>
                      <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="ContentInfo" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_ContentInfo()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Crls" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_Crls()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="HashName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_HashName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_HashName(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="SignerInfo" attrib="0" ptype="Mono.Security.PKCS7+SignerInfo">
                    <methods>
                      <method name="get_SignerInfo()" attrib="2182" returntype="Mono.Security.PKCS7+SignerInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="UseAuthenticatedAttributes" attrib="0" ptype="System.Boolean">
                    <methods>
                      <method name="get_UseAuthenticatedAttributes()" attrib="2182" returntype="System.Boolean">
                        <parameters />
                      </method>
                      <method name="set_UseAuthenticatedAttributes(System.Boolean)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="VerifySignature(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Boolean">
                    <parameters>
                      <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="SignerInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="AuthenticatedAttributes" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_AuthenticatedAttributes()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Certificate" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                    <methods>
                      <method name="get_Certificate()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                        <parameters />
                      </method>
                      <method name="set_Certificate(Mono.Security.X509.X509Certificate)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="HashName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_HashName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_HashName(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="IssuerName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_IssuerName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Key" attrib="0" ptype="System.Security.Cryptography.AsymmetricAlgorithm">
                    <methods>
                      <method name="get_Key()" attrib="2182" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                        <parameters />
                      </method>
                      <method name="set_Key(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SerialNumber()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Signature" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Signature()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Signature(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="SubjectKeyIdentifier" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SubjectKeyIdentifier()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="UnauthenticatedAttributes" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_UnauthenticatedAttributes()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="StrongName" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="keySize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Security.Cryptography.RSA)" attrib="6278">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanSign" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanSign()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicKey" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_PublicKey()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicKeyToken" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_PublicKeyToken()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2182" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TokenAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TokenAlgorithm()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_TokenAlgorithm(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Hash(System.String)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Sign(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Verify(System.IO.Stream)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Verify(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Authenticode">
        <classes>
          <class name="AuthenticodeBase" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="spcIndirectDataContext" attrib="32854" fieldtype="System.String" value="1.3.6.1.4.1.311.2.1.4" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="HashFile(System.String, System.String)" attrib="132" returntype="System.Byte[]">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                  <parameter name="hashName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AuthenticodeDeformatter" type="class" base="Mono.Security.Authenticode.AuthenticodeBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FileName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_FileName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_FileName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Reason" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Reason()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Signature()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SigningCertificate" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                <methods>
                  <method name="get_SigningCertificate()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Timestamp" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_Timestamp()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="IsTrusted()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="AuthenticodeFormatter" type="class" base="Mono.Security.Authenticode.AuthenticodeBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Authority" attrib="0" ptype="Mono.Security.Authenticode.Authority">
                <methods>
                  <method name="get_Authority()" attrib="2182" returntype="Mono.Security.Authenticode.Authority">
                    <parameters />
                  </method>
                  <method name="set_Authority(Mono.Security.Authenticode.Authority)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Authenticode.Authority" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Crl" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Crl()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Description" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Description()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Description(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Hash(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2182" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TimestampUrl" attrib="0" ptype="System.Uri">
                <methods>
                  <method name="get_TimestampUrl()" attrib="2182" returntype="System.Uri">
                    <parameters />
                  </method>
                  <method name="set_TimestampUrl(System.Uri)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Uri" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Url" attrib="0" ptype="System.Uri">
                <methods>
                  <method name="get_Url()" attrib="2182" returntype="System.Uri">
                    <parameters />
                  </method>
                  <method name="set_Url(System.Uri)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Uri" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ProcessTimestamp(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="response" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Sign(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Timestamp(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TimestampRequest(System.Byte[])" attrib="134" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="signature" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Authority" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Commercial" attrib="32854" fieldtype="Mono.Security.Authenticode.Authority" value="1" />
              <field name="Individual" attrib="32854" fieldtype="Mono.Security.Authenticode.Authority" value="0" />
              <field name="Maximum" attrib="32854" fieldtype="Mono.Security.Authenticode.Authority" value="2" />
            </fields>
          </class>
          <class name="PrivateKey" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[], System.String)" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Encrypted" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Encrypted()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyType" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_KeyType()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_KeyType(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2182" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Weak" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Weak()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Weak(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.Authenticode.PrivateKey">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateFromFile(System.String, System.String)" attrib="150" static="true" returntype="Mono.Security.Authenticode.PrivateKey">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Save(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Save(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SoftwarePublisherCertificate" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Crls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Crls()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.Authenticode.SoftwarePublisherCertificate">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Cryptography">
        <classes>
          <class name="ARC4Managed" type="class" base="Mono.Security.Cryptography.RC4" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CanReuseTransform" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReuseTransform()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanTransformMultipleBlocks" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanTransformMultipleBlocks()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InputBlockSize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_InputBlockSize()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Key" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Key()" attrib="2246" virtual="true" is-override="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Key(System.Byte[])" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OutputBlockSize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_OutputBlockSize()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateDecryptor(System.Byte[], System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="rgbKey" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="rgvIV" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="CreateEncryptor(System.Byte[], System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="rgbKey" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="rgvIV" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GenerateIV()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GenerateKey()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="TransformBlock(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="outputBuffer" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="outputOffset" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TransformFinalBlock(System.Byte[], System.Int32, System.Int32)" attrib="486" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="~ARC4Managed()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="BlockProcessor" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Security.Cryptography.ICryptoTransform)" attrib="6278">
                <parameters>
                  <parameter name="transform" position="0" attrib="0" type="System.Security.Cryptography.ICryptoTransform" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Security.Cryptography.ICryptoTransform, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="transform" position="0" attrib="0" type="System.Security.Cryptography.ICryptoTransform" />
                  <parameter name="blockSize" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Core(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Core(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ib" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cb" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Final()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="~BlockProcessor()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="CryptoConvert" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="FromCapiKeyBlob(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiKeyBlob(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiKeyBlobDSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiKeyBlobDSA(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlob(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlob(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlobDSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlobDSA(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlob(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlob(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlobDSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlobDSA(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromHex(System.String)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="hex" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToCapiKeyBlob(System.Security.Cryptography.AsymmetricAlgorithm, System.Boolean)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="keypair" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                  <parameter name="includePrivateKey" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToCapiKeyBlob(System.Security.Cryptography.DSA, System.Boolean)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                  <parameter name="includePrivateKey" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToCapiKeyBlob(System.Security.Cryptography.RSA, System.Boolean)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="includePrivateKey" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToCapiPrivateKeyBlob(System.Security.Cryptography.DSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                </parameters>
              </method>
              <method name="ToCapiPrivateKeyBlob(System.Security.Cryptography.RSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </method>
              <method name="ToCapiPublicKeyBlob(System.Security.Cryptography.DSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                </parameters>
              </method>
              <method name="ToCapiPublicKeyBlob(System.Security.Cryptography.RSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </method>
              <method name="ToHex(System.Byte[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DHKeyGeneration" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Random" attrib="32854" fieldtype="Mono.Security.Cryptography.DHKeyGeneration" value="0" />
              <field name="Static" attrib="32854" fieldtype="Mono.Security.Cryptography.DHKeyGeneration" value="1" />
            </fields>
          </class>
          <class name="DHParameters" type="struct" base="System.ValueType" sealed="true" serializable="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="G" attrib="6" fieldtype="System.Byte[]" />
              <field name="P" attrib="6" fieldtype="System.Byte[]" />
              <field name="X" attrib="134" fieldtype="System.Byte[]" />
            </fields>
          </class>
          <class name="DiffieHellman" type="class" base="System.Security.Cryptography.AsymmetricAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.DiffieHellman">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.DiffieHellman">
                <parameters>
                  <parameter name="algName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateKeyExchange()" attrib="1478" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="DecryptKeyExchange(System.Byte[])" attrib="1478" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="keyex" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ExportParameters(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="Mono.Security.Cryptography.DHParameters">
                <parameters>
                  <parameter name="includePrivate" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="FromXmlString(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="xmlString" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ImportParameters(Mono.Security.Cryptography.DHParameters)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="Mono.Security.Cryptography.DHParameters" />
                </parameters>
              </method>
              <method name="ToXmlString(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DiffieHellmanManaged" type="class" base="Mono.Security.Cryptography.DiffieHellman" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Byte[], System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="p" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="x" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Byte[], System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="p" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="l" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, Mono.Security.Cryptography.DHKeyGeneration)" attrib="6278">
                <parameters>
                  <parameter name="bitLength" position="0" attrib="0" type="System.Int32" />
                  <parameter name="l" position="1" attrib="0" type="System.Int32" />
                  <parameter name="method" position="2" attrib="0" type="Mono.Security.Cryptography.DHKeyGeneration" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyExchangeAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyExchangeAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateKeyExchange()" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="DecryptKeyExchange(System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="keyEx" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ExportParameters(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="Mono.Security.Cryptography.DHParameters">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportParameters(Mono.Security.Cryptography.DHParameters)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="Mono.Security.Cryptography.DHParameters" />
                </parameters>
              </method>
              <method name="~DiffieHellmanManaged()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyBuilder" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="IV(System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Key(System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="KeyPairPersistence" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Security.Cryptography.CspParameters)" attrib="6278">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Security.Cryptography.CspParameters" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Security.Cryptography.CspParameters, System.String)" attrib="6278">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Security.Cryptography.CspParameters" />
                  <parameter name="keyPair" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Filename" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Filename()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyValue" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_KeyValue(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Parameters" attrib="0" ptype="System.Security.Cryptography.CspParameters">
                <methods>
                  <method name="get_Parameters()" attrib="2182" returntype="System.Security.Cryptography.CspParameters">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Load()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Remove()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Save()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MD2" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD2">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD2">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MD2Managed" type="class" base="Mono.Security.Cryptography.MD2" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ibStart" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cbSize" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MD4" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD4">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD4">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MD4Managed" type="class" base="Mono.Security.Cryptography.MD4" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ibStart" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cbSize" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="PKCS1" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Decrypt_OAEP(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="C" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Decrypt_v15(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="C" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Encode_v15(System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="hash" position="0" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="emLength" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Encrypt_OAEP(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Security.Cryptography.RandomNumberGenerator, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="rng" position="2" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                  <parameter name="M" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Encrypt_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.RandomNumberGenerator, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="rng" position="1" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                  <parameter name="M" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="I2OSP(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="I2OSP(System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Int32" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MGF1(System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="hash" position="0" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="mgfSeed" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="maskLen" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="OS2IP(System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSADP(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="c" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSAEP(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="m" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSASP1(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="m" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSAVP1(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="s" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Sign_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Verify_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Byte[])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="signature" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Verify_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Byte[], System.Boolean)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="signature" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="tryNonStandardEncoding" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PKCS8" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetType(System.Byte[])" attrib="150" static="true" returntype="Mono.Security.Cryptography.PKCS8+KeyInfo">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="EncryptedPrivateKeyInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Algorithm" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Algorithm()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_Algorithm(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptedData" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_EncryptedData()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_EncryptedData(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="IterationCount" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_IterationCount()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                      <method name="set_IterationCount(System.Int32)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Int32" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Salt" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Salt()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Salt(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="KeyInfo" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="EncryptedPrivateKey" attrib="32854" fieldtype="Mono.Security.Cryptography.PKCS8+KeyInfo" value="1" />
                  <field name="PrivateKey" attrib="32854" fieldtype="Mono.Security.Cryptography.PKCS8+KeyInfo" value="0" />
                  <field name="Unknown" attrib="32854" fieldtype="Mono.Security.Cryptography.PKCS8+KeyInfo" value="2" />
                </fields>
              </class>
              <class name="PrivateKeyInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Algorithm" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Algorithm()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_Algorithm(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Attributes" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_Attributes()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="PrivateKey" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_PrivateKey()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_PrivateKey(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Int32)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Int32" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="DecodeDSA(System.Byte[], System.Security.Cryptography.DSAParameters)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                    <parameters>
                      <parameter name="privateKey" position="0" attrib="0" type="System.Byte[]" />
                      <parameter name="dsaParameters" position="1" attrib="0" type="System.Security.Cryptography.DSAParameters" />
                    </parameters>
                  </method>
                  <method name="DecodeRSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                    <parameters>
                      <parameter name="keypair" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                  <method name="Encode(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="150" static="true" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                    </parameters>
                  </method>
                  <method name="Encode(System.Security.Cryptography.DSA)" attrib="150" static="true" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                    </parameters>
                  </method>
                  <method name="Encode(System.Security.Cryptography.RSA)" attrib="150" static="true" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="RC4" type="class" base="System.Security.Cryptography.SymmetricAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IV" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_IV()" attrib="2246" virtual="true" is-override="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_IV(System.Byte[])" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.RC4">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.RC4">
                <parameters>
                  <parameter name="algName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="RSAManaged" type="class" base="System.Security.Cryptography.RSA" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="keySize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsCrtPossible" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCrtPossible()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyExchangeAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyExchangeAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeySize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_KeySize()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_PublicOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UseKeyBlinding" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_UseKeyBlinding()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_UseKeyBlinding(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="KeyGenerated" attrib="0" eventtype="Mono.Security.Cryptography.RSAManaged+KeyGeneratedEventHandler" />
            </events>
            <methods>
              <method name="DecryptValue(System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="EncryptValue(System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ExportParameters(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Security.Cryptography.RSAParameters">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportParameters(System.Security.Cryptography.RSAParameters)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Security.Cryptography.RSAParameters" />
                </parameters>
              </method>
              <method name="ToXmlString(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="~RSAManaged()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="KeyGeneratedEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="System.ICloneable" />
                  <interface name="System.Runtime.Serialization.ISerializable" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                    <parameters>
                      <parameter name="object" position="0" attrib="0" type="System.Object" />
                      <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                    </parameters>
                  </constructor>
                </constructors>
                <methods>
                  <method name="BeginInvoke(System.Object, System.EventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                    <parameters>
                      <parameter name="sender" position="0" attrib="0" type="System.Object" />
                      <parameter name="e" position="1" attrib="0" type="System.EventArgs" />
                      <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                      <parameter name="object" position="3" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                  <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                    </parameters>
                  </method>
                  <method name="Invoke(System.Object, System.EventArgs)" attrib="454" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="sender" position="0" attrib="0" type="System.Object" />
                      <parameter name="e" position="1" attrib="0" type="System.EventArgs" />
                    </parameters>
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="SHA224" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.SHA224">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.SHA224">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SHA224Managed" type="class" base="Mono.Security.Cryptography.SHA224" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="start" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Interface">
        <classes>
          <class name="Alert" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(Mono.Security.Interface.AlertDescription)" attrib="6278">
                <parameters>
                  <parameter name="description" position="0" attrib="0" type="Mono.Security.Interface.AlertDescription" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.Interface.AlertLevel, Mono.Security.Interface.AlertDescription)" attrib="6278">
                <parameters>
                  <parameter name="level" position="0" attrib="0" type="Mono.Security.Interface.AlertLevel" />
                  <parameter name="description" position="1" attrib="0" type="Mono.Security.Interface.AlertDescription" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Description" attrib="0" ptype="Mono.Security.Interface.AlertDescription">
                <methods>
                  <method name="get_Description()" attrib="2182" returntype="Mono.Security.Interface.AlertDescription">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCloseNotify" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCloseNotify()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsWarning" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsWarning()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Level" attrib="0" ptype="Mono.Security.Interface.AlertLevel">
                <methods>
                  <method name="get_Level()" attrib="2182" returntype="Mono.Security.Interface.AlertLevel">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Message" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Message()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetAlertMessage(Mono.Security.Interface.AlertDescription)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="description" position="0" attrib="0" type="Mono.Security.Interface.AlertDescription" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="AlertDescription" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Byte">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AccessDenied" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="49" />
              <field name="BadCertificate" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="42" />
              <field name="BadRecordMAC" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="20" />
              <field name="CertificateExpired" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="45" />
              <field name="CertificateRevoked" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="44" />
              <field name="CertificateUnknown" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="46" />
              <field name="CloseNotify" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="0" />
              <field name="DecodeError" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="50" />
              <field name="DecompressionFailure" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="30" />
              <field name="DecryptError" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="51" />
              <field name="DecryptionFailed_RESERVED" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="21" />
              <field name="ExportRestriction" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="60" />
              <field name="HandshakeFailure" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="40" />
              <field name="IlegalParameter" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="47" />
              <field name="InsuficientSecurity" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="71" />
              <field name="InternalError" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="80" />
              <field name="NoCertificate_RESERVED" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="41" />
              <field name="NoRenegotiation" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="100" />
              <field name="ProtocolVersion" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="70" />
              <field name="RecordOverflow" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="22" />
              <field name="UnexpectedMessage" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="10" />
              <field name="UnknownCA" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="48" />
              <field name="UnsupportedCertificate" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="43" />
              <field name="UnsupportedExtension" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="110" />
              <field name="UserCancelled" attrib="32854" fieldtype="Mono.Security.Interface.AlertDescription" value="90" />
            </fields>
          </class>
          <class name="AlertLevel" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Byte">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Fatal" attrib="32854" fieldtype="Mono.Security.Interface.AlertLevel" value="2" />
              <field name="Warning" attrib="32854" fieldtype="Mono.Security.Interface.AlertLevel" value="1" />
            </fields>
          </class>
          <class name="CertificateValidationHelper" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="SupportsTrustAnchors" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_SupportsTrustAnchors()" attrib="2198" static="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SupportsX509Chain" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_SupportsX509Chain()" attrib="2198" static="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetValidator(Mono.Security.Interface.MonoTlsSettings)" attrib="150" static="true" returntype="Mono.Security.Interface.ICertificateValidator">
                <parameters>
                  <parameter name="settings" position="0" attrib="0" type="Mono.Security.Interface.MonoTlsSettings" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CipherAlgorithmType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Aes128" attrib="32854" fieldtype="Mono.Security.Interface.CipherAlgorithmType" value="1" />
              <field name="Aes256" attrib="32854" fieldtype="Mono.Security.Interface.CipherAlgorithmType" value="2" />
              <field name="AesGcm128" attrib="32854" fieldtype="Mono.Security.Interface.CipherAlgorithmType" value="3" />
              <field name="AesGcm256" attrib="32854" fieldtype="Mono.Security.Interface.CipherAlgorithmType" value="4" />
              <field name="None" attrib="32854" fieldtype="Mono.Security.Interface.CipherAlgorithmType" value="0" />
            </fields>
          </class>
          <class name="CipherSuiteCode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.UInt16">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="17" />
              <field name="TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="19" />
              <field name="TLS_DHE_DSS_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="50" />
              <field name="TLS_DHE_DSS_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="64" />
              <field name="TLS_DHE_DSS_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="162" />
              <field name="TLS_DHE_DSS_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="56" />
              <field name="TLS_DHE_DSS_WITH_AES_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="106" />
              <field name="TLS_DHE_DSS_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="163" />
              <field name="TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="68" />
              <field name="TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="189" />
              <field name="TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49280" />
              <field name="TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="135" />
              <field name="TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="195" />
              <field name="TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49281" />
              <field name="TLS_DHE_DSS_WITH_DES_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="18" />
              <field name="TLS_DHE_DSS_WITH_SEED_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="153" />
              <field name="TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="143" />
              <field name="TLS_DHE_PSK_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="144" />
              <field name="TLS_DHE_PSK_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="178" />
              <field name="TLS_DHE_PSK_WITH_AES_128_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49318" />
              <field name="TLS_DHE_PSK_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="170" />
              <field name="TLS_DHE_PSK_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="145" />
              <field name="TLS_DHE_PSK_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="179" />
              <field name="TLS_DHE_PSK_WITH_AES_256_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49319" />
              <field name="TLS_DHE_PSK_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="171" />
              <field name="TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49302" />
              <field name="TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49296" />
              <field name="TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49303" />
              <field name="TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49297" />
              <field name="TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58396" />
              <field name="TLS_DHE_PSK_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="45" />
              <field name="TLS_DHE_PSK_WITH_NULL_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="180" />
              <field name="TLS_DHE_PSK_WITH_NULL_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="181" />
              <field name="TLS_DHE_PSK_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="142" />
              <field name="TLS_DHE_PSK_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58397" />
              <field name="TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="20" />
              <field name="TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="22" />
              <field name="TLS_DHE_RSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="51" />
              <field name="TLS_DHE_RSA_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="103" />
              <field name="TLS_DHE_RSA_WITH_AES_128_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49310" />
              <field name="TLS_DHE_RSA_WITH_AES_128_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49314" />
              <field name="TLS_DHE_RSA_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="158" />
              <field name="TLS_DHE_RSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="57" />
              <field name="TLS_DHE_RSA_WITH_AES_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="107" />
              <field name="TLS_DHE_RSA_WITH_AES_256_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49311" />
              <field name="TLS_DHE_RSA_WITH_AES_256_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49315" />
              <field name="TLS_DHE_RSA_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="159" />
              <field name="TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="69" />
              <field name="TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="190" />
              <field name="TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49276" />
              <field name="TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="136" />
              <field name="TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="196" />
              <field name="TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49277" />
              <field name="TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="52245" />
              <field name="TLS_DHE_RSA_WITH_DES_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="21" />
              <field name="TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58398" />
              <field name="TLS_DHE_RSA_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58399" />
              <field name="TLS_DHE_RSA_WITH_SEED_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="154" />
              <field name="TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="11" />
              <field name="TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="13" />
              <field name="TLS_DH_DSS_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="48" />
              <field name="TLS_DH_DSS_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="62" />
              <field name="TLS_DH_DSS_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="164" />
              <field name="TLS_DH_DSS_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="54" />
              <field name="TLS_DH_DSS_WITH_AES_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="104" />
              <field name="TLS_DH_DSS_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="165" />
              <field name="TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="66" />
              <field name="TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="187" />
              <field name="TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49282" />
              <field name="TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="133" />
              <field name="TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="193" />
              <field name="TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49283" />
              <field name="TLS_DH_DSS_WITH_DES_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="12" />
              <field name="TLS_DH_DSS_WITH_SEED_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="151" />
              <field name="TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="14" />
              <field name="TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="16" />
              <field name="TLS_DH_RSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49" />
              <field name="TLS_DH_RSA_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="63" />
              <field name="TLS_DH_RSA_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="160" />
              <field name="TLS_DH_RSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="55" />
              <field name="TLS_DH_RSA_WITH_AES_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="105" />
              <field name="TLS_DH_RSA_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="161" />
              <field name="TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="67" />
              <field name="TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="188" />
              <field name="TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49278" />
              <field name="TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="134" />
              <field name="TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="194" />
              <field name="TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49279" />
              <field name="TLS_DH_RSA_WITH_DES_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="15" />
              <field name="TLS_DH_RSA_WITH_SEED_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="152" />
              <field name="TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="25" />
              <field name="TLS_DH_anon_EXPORT_WITH_RC4_40_MD5" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="23" />
              <field name="TLS_DH_anon_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="27" />
              <field name="TLS_DH_anon_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="52" />
              <field name="TLS_DH_anon_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="108" />
              <field name="TLS_DH_anon_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="166" />
              <field name="TLS_DH_anon_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58" />
              <field name="TLS_DH_anon_WITH_AES_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="109" />
              <field name="TLS_DH_anon_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="167" />
              <field name="TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="70" />
              <field name="TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="191" />
              <field name="TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49284" />
              <field name="TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="137" />
              <field name="TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="197" />
              <field name="TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49285" />
              <field name="TLS_DH_anon_WITH_DES_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="26" />
              <field name="TLS_DH_anon_WITH_RC4_128_MD5" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="24" />
              <field name="TLS_DH_anon_WITH_SEED_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="155" />
              <field name="TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49160" />
              <field name="TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49161" />
              <field name="TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49187" />
              <field name="TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49195" />
              <field name="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49162" />
              <field name="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49188" />
              <field name="TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49196" />
              <field name="TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49266" />
              <field name="TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49286" />
              <field name="TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49267" />
              <field name="TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49287" />
              <field name="TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="52244" />
              <field name="TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58388" />
              <field name="TLS_ECDHE_ECDSA_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49158" />
              <field name="TLS_ECDHE_ECDSA_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49159" />
              <field name="TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58389" />
              <field name="TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49204" />
              <field name="TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49205" />
              <field name="TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49207" />
              <field name="TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49206" />
              <field name="TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49208" />
              <field name="TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49306" />
              <field name="TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49307" />
              <field name="TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58392" />
              <field name="TLS_ECDHE_PSK_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49209" />
              <field name="TLS_ECDHE_PSK_WITH_NULL_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49210" />
              <field name="TLS_ECDHE_PSK_WITH_NULL_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49211" />
              <field name="TLS_ECDHE_PSK_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49203" />
              <field name="TLS_ECDHE_PSK_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58393" />
              <field name="TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49170" />
              <field name="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49171" />
              <field name="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49191" />
              <field name="TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49199" />
              <field name="TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49172" />
              <field name="TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49192" />
              <field name="TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49200" />
              <field name="TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49270" />
              <field name="TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49290" />
              <field name="TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49271" />
              <field name="TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49291" />
              <field name="TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="52243" />
              <field name="TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58386" />
              <field name="TLS_ECDHE_RSA_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49168" />
              <field name="TLS_ECDHE_RSA_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49169" />
              <field name="TLS_ECDHE_RSA_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58387" />
              <field name="TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49155" />
              <field name="TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49156" />
              <field name="TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49189" />
              <field name="TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49197" />
              <field name="TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49157" />
              <field name="TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49190" />
              <field name="TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49198" />
              <field name="TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49268" />
              <field name="TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49288" />
              <field name="TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49269" />
              <field name="TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49289" />
              <field name="TLS_ECDH_ECDSA_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49153" />
              <field name="TLS_ECDH_ECDSA_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49154" />
              <field name="TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49165" />
              <field name="TLS_ECDH_RSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49166" />
              <field name="TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49193" />
              <field name="TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49201" />
              <field name="TLS_ECDH_RSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49167" />
              <field name="TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49194" />
              <field name="TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49202" />
              <field name="TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49272" />
              <field name="TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49292" />
              <field name="TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49273" />
              <field name="TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49293" />
              <field name="TLS_ECDH_RSA_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49163" />
              <field name="TLS_ECDH_RSA_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49164" />
              <field name="TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49175" />
              <field name="TLS_ECDH_anon_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49176" />
              <field name="TLS_ECDH_anon_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49177" />
              <field name="TLS_ECDH_anon_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49173" />
              <field name="TLS_ECDH_anon_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49174" />
              <field name="TLS_EMPTY_RENEGOTIATION_INFO_SCSV" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="255" />
              <field name="TLS_FALLBACK_SCSV" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="22016" />
              <field name="TLS_NULL_WITH_NULL_NULL" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="0" />
              <field name="TLS_PSK_DHE_WITH_AES_128_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49322" />
              <field name="TLS_PSK_DHE_WITH_AES_256_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49323" />
              <field name="TLS_PSK_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="139" />
              <field name="TLS_PSK_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="140" />
              <field name="TLS_PSK_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="174" />
              <field name="TLS_PSK_WITH_AES_128_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49316" />
              <field name="TLS_PSK_WITH_AES_128_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49320" />
              <field name="TLS_PSK_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="168" />
              <field name="TLS_PSK_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="141" />
              <field name="TLS_PSK_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="175" />
              <field name="TLS_PSK_WITH_AES_256_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49317" />
              <field name="TLS_PSK_WITH_AES_256_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49321" />
              <field name="TLS_PSK_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="169" />
              <field name="TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49300" />
              <field name="TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49294" />
              <field name="TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49301" />
              <field name="TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49295" />
              <field name="TLS_PSK_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58390" />
              <field name="TLS_PSK_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="44" />
              <field name="TLS_PSK_WITH_NULL_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="176" />
              <field name="TLS_PSK_WITH_NULL_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="177" />
              <field name="TLS_PSK_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="138" />
              <field name="TLS_PSK_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58391" />
              <field name="TLS_RSA_EXPORT_WITH_DES40_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="8" />
              <field name="TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="6" />
              <field name="TLS_RSA_EXPORT_WITH_RC4_40_MD5" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="3" />
              <field name="TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="147" />
              <field name="TLS_RSA_PSK_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="148" />
              <field name="TLS_RSA_PSK_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="182" />
              <field name="TLS_RSA_PSK_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="172" />
              <field name="TLS_RSA_PSK_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="149" />
              <field name="TLS_RSA_PSK_WITH_AES_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="183" />
              <field name="TLS_RSA_PSK_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="173" />
              <field name="TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49304" />
              <field name="TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49298" />
              <field name="TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49305" />
              <field name="TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49299" />
              <field name="TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58394" />
              <field name="TLS_RSA_PSK_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="46" />
              <field name="TLS_RSA_PSK_WITH_NULL_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="184" />
              <field name="TLS_RSA_PSK_WITH_NULL_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="185" />
              <field name="TLS_RSA_PSK_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="146" />
              <field name="TLS_RSA_PSK_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58395" />
              <field name="TLS_RSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="10" />
              <field name="TLS_RSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="47" />
              <field name="TLS_RSA_WITH_AES_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="60" />
              <field name="TLS_RSA_WITH_AES_128_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49308" />
              <field name="TLS_RSA_WITH_AES_128_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49312" />
              <field name="TLS_RSA_WITH_AES_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="156" />
              <field name="TLS_RSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="53" />
              <field name="TLS_RSA_WITH_AES_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="61" />
              <field name="TLS_RSA_WITH_AES_256_CCM" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49309" />
              <field name="TLS_RSA_WITH_AES_256_CCM_8" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49313" />
              <field name="TLS_RSA_WITH_AES_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="157" />
              <field name="TLS_RSA_WITH_CAMELLIA_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="65" />
              <field name="TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="186" />
              <field name="TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49274" />
              <field name="TLS_RSA_WITH_CAMELLIA_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="132" />
              <field name="TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="192" />
              <field name="TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49275" />
              <field name="TLS_RSA_WITH_DES_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="9" />
              <field name="TLS_RSA_WITH_ESTREAM_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58384" />
              <field name="TLS_RSA_WITH_IDEA_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="7" />
              <field name="TLS_RSA_WITH_NULL_MD5" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="1" />
              <field name="TLS_RSA_WITH_NULL_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="2" />
              <field name="TLS_RSA_WITH_NULL_SHA256" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="59" />
              <field name="TLS_RSA_WITH_RC4_128_MD5" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="4" />
              <field name="TLS_RSA_WITH_RC4_128_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="5" />
              <field name="TLS_RSA_WITH_SALSA20_SHA1" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="58385" />
              <field name="TLS_RSA_WITH_SEED_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="150" />
              <field name="TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49180" />
              <field name="TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49183" />
              <field name="TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49186" />
              <field name="TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49179" />
              <field name="TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49182" />
              <field name="TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49185" />
              <field name="TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49178" />
              <field name="TLS_SRP_SHA_WITH_AES_128_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49181" />
              <field name="TLS_SRP_SHA_WITH_AES_256_CBC_SHA" attrib="32854" fieldtype="Mono.Security.Interface.CipherSuiteCode" value="49184" />
            </fields>
          </class>
          <class name="ExchangeAlgorithmType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Dhe" attrib="32854" fieldtype="Mono.Security.Interface.ExchangeAlgorithmType" value="1" />
              <field name="EcDhe" attrib="32854" fieldtype="Mono.Security.Interface.ExchangeAlgorithmType" value="3" />
              <field name="None" attrib="32854" fieldtype="Mono.Security.Interface.ExchangeAlgorithmType" value="0" />
              <field name="Rsa" attrib="32854" fieldtype="Mono.Security.Interface.ExchangeAlgorithmType" value="2" />
            </fields>
          </class>
          <class name="HashAlgorithmType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Md5" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="1" />
              <field name="Md5Sha1" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="254" />
              <field name="None" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="0" />
              <field name="Sha1" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="2" />
              <field name="Sha224" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="3" />
              <field name="Sha256" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="4" />
              <field name="Sha384" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="5" />
              <field name="Sha512" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="6" />
              <field name="Unknown" attrib="32854" fieldtype="Mono.Security.Interface.HashAlgorithmType" value="255" />
            </fields>
          </class>
          <class name="ICertificateValidator" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Settings" attrib="0" ptype="Mono.Security.Interface.MonoTlsSettings">
                <methods>
                  <method name="get_Settings()" attrib="3526" abstract="true" virtual="true" returntype="Mono.Security.Interface.MonoTlsSettings">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="SelectClientCertificate(System.String, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Cryptography.X509Certificates.X509Certificate, System.String[], out System.Security.Cryptography.X509Certificates.X509Certificate&amp;)" attrib="1478" abstract="true" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="targetHost" position="0" attrib="0" type="System.String" />
                  <parameter name="localCertificates" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                  <parameter name="remoteCertificate" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="acceptableIssuers" position="3" attrib="0" type="System.String[]" />
                  <parameter name="clientCertificate" position="4" attrib="2" type="System.Security.Cryptography.X509Certificates.X509Certificate" direction="out" />
                </parameters>
              </method>
              <method name="ValidateCertificate(System.String, System.Boolean, System.Security.Cryptography.X509Certificates.X509CertificateCollection)" attrib="1478" abstract="true" virtual="true" returntype="Mono.Security.Interface.ValidationResult">
                <parameters>
                  <parameter name="targetHost" position="0" attrib="0" type="System.String" />
                  <parameter name="serverMode" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="certificates" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IMonoSslStream" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <properties>
              <property name="AuthenticatedStream" attrib="0" ptype="System.Net.Security.AuthenticatedStream">
                <methods>
                  <method name="get_AuthenticatedStream()" attrib="3526" abstract="true" virtual="true" returntype="System.Net.Security.AuthenticatedStream">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanRead" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanRead()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanRenegotiate" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanRenegotiate()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanTimeout" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanTimeout()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanWrite()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CheckCertRevocationStatus" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CheckCertRevocationStatus()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CipherAlgorithm" attrib="0" ptype="System.Security.Authentication.CipherAlgorithmType">
                <methods>
                  <method name="get_CipherAlgorithm()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Authentication.CipherAlgorithmType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CipherStrength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_CipherStrength()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HashAlgorithm" attrib="0" ptype="System.Security.Authentication.HashAlgorithmType">
                <methods>
                  <method name="get_HashAlgorithm()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Authentication.HashAlgorithmType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HashStrength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_HashStrength()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InternalLocalCertificate" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <methods>
                  <method name="get_InternalLocalCertificate()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsAuthenticated" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsAuthenticated()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsEncrypted" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEncrypted()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsMutuallyAuthenticated" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsMutuallyAuthenticated()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsServer" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsServer()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSigned" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSigned()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyExchangeAlgorithm" attrib="0" ptype="System.Security.Authentication.ExchangeAlgorithmType">
                <methods>
                  <method name="get_KeyExchangeAlgorithm()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Authentication.ExchangeAlgorithmType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyExchangeStrength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_KeyExchangeStrength()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Length()" attrib="3526" abstract="true" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalCertificate" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <methods>
                  <method name="get_LocalCertificate()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Position()" attrib="3526" abstract="true" virtual="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Provider" attrib="0" ptype="Mono.Security.Interface.MonoTlsProvider">
                <methods>
                  <method name="get_Provider()" attrib="3526" abstract="true" virtual="true" returntype="Mono.Security.Interface.MonoTlsProvider">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ReadTimeout" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ReadTimeout()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_ReadTimeout(System.Int32)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RemoteCertificate" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <methods>
                  <method name="get_RemoteCertificate()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SslProtocol" attrib="0" ptype="System.Security.Authentication.SslProtocols">
                <methods>
                  <method name="get_SslProtocol()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Authentication.SslProtocols">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SslStream" attrib="0" ptype="System.Net.Security.SslStream">
                <methods>
                  <method name="get_SslStream()" attrib="3526" abstract="true" virtual="true" returntype="System.Net.Security.SslStream">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TransportContext" attrib="0" ptype="System.Net.TransportContext">
                <methods>
                  <method name="get_TransportContext()" attrib="3526" abstract="true" virtual="true" returntype="System.Net.TransportContext">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="WriteTimeout" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_WriteTimeout()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_WriteTimeout(System.Int32)" attrib="3526" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AuthenticateAsClientAsync(System.String, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Authentication.SslProtocols, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="targetHost" position="0" attrib="0" type="System.String" />
                  <parameter name="clientCertificates" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                  <parameter name="enabledSslProtocols" position="2" attrib="0" type="System.Security.Authentication.SslProtocols" />
                  <parameter name="checkCertificateRevocation" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate, System.Boolean, System.Security.Authentication.SslProtocols, System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="serverCertificate" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="clientCertificateRequired" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="enabledSslProtocols" position="2" attrib="0" type="System.Security.Authentication.SslProtocols" />
                  <parameter name="checkCertificateRevocation" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetConnectionInfo()" attrib="1478" abstract="true" virtual="true" returntype="Mono.Security.Interface.MonoTlsConnectionInfo">
                <parameters />
              </method>
              <method name="ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)" attrib="1478" abstract="true" virtual="true" returntype="System.Threading.Tasks.Task`1[System.Int32]">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="cancellationToken" position="3" attrib="0" type="System.Threading.CancellationToken" />
                </parameters>
              </method>
              <method name="RenegotiateAsync(System.Threading.CancellationToken)" attrib="1478" abstract="true" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="cancellationToken" position="0" attrib="0" type="System.Threading.CancellationToken" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="ShutdownAsync()" attrib="1478" abstract="true" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters />
              </method>
              <method name="WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)" attrib="1478" abstract="true" virtual="true" returntype="System.Threading.Tasks.Task">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="cancellationToken" position="3" attrib="0" type="System.Threading.CancellationToken" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MonoEncryptionPolicy" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="AllowNoEncryption" attrib="32854" fieldtype="Mono.Security.Interface.MonoEncryptionPolicy" value="1" />
              <field name="NoEncryption" attrib="32854" fieldtype="Mono.Security.Interface.MonoEncryptionPolicy" value="2" />
              <field name="RequireEncryption" attrib="32854" fieldtype="Mono.Security.Interface.MonoEncryptionPolicy" value="0" />
            </fields>
          </class>
          <class name="MonoLocalCertificateSelectionCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.String, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Cryptography.X509Certificates.X509Certificate, System.String[], System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="targetHost" position="0" attrib="0" type="System.String" />
                  <parameter name="localCertificates" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                  <parameter name="remoteCertificate" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="acceptableIssuers" position="3" attrib="0" type="System.String[]" />
                  <parameter name="callback" position="4" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="5" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.String, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Cryptography.X509Certificates.X509Certificate, System.String[])" attrib="454" virtual="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <parameters>
                  <parameter name="targetHost" position="0" attrib="0" type="System.String" />
                  <parameter name="localCertificates" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                  <parameter name="remoteCertificate" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="acceptableIssuers" position="3" attrib="0" type="System.String[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MonoRemoteCertificateValidationCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.String, System.Security.Cryptography.X509Certificates.X509Certificate, System.Security.Cryptography.X509Certificates.X509Chain, Mono.Security.Interface.MonoSslPolicyErrors, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="targetHost" position="0" attrib="0" type="System.String" />
                  <parameter name="certificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="chain" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Chain" />
                  <parameter name="sslPolicyErrors" position="3" attrib="0" type="Mono.Security.Interface.MonoSslPolicyErrors" />
                  <parameter name="callback" position="4" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="5" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.String, System.Security.Cryptography.X509Certificates.X509Certificate, System.Security.Cryptography.X509Certificates.X509Chain, Mono.Security.Interface.MonoSslPolicyErrors)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="targetHost" position="0" attrib="0" type="System.String" />
                  <parameter name="certificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="chain" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Chain" />
                  <parameter name="sslPolicyErrors" position="3" attrib="0" type="Mono.Security.Interface.MonoSslPolicyErrors" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MonoSslPolicyErrors" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="None" attrib="32854" fieldtype="Mono.Security.Interface.MonoSslPolicyErrors" value="0" />
              <field name="RemoteCertificateChainErrors" attrib="32854" fieldtype="Mono.Security.Interface.MonoSslPolicyErrors" value="4" />
              <field name="RemoteCertificateNameMismatch" attrib="32854" fieldtype="Mono.Security.Interface.MonoSslPolicyErrors" value="2" />
              <field name="RemoteCertificateNotAvailable" attrib="32854" fieldtype="Mono.Security.Interface.MonoSslPolicyErrors" value="1" />
            </fields>
          </class>
          <class name="MonoTlsConnectionInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CipherAlgorithmType" attrib="0" ptype="Mono.Security.Interface.CipherAlgorithmType">
                <methods>
                  <method name="get_CipherAlgorithmType()" attrib="2182" returntype="Mono.Security.Interface.CipherAlgorithmType">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CipherAlgorithmType(Mono.Security.Interface.CipherAlgorithmType)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.CipherAlgorithmType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CipherSuiteCode" attrib="0" ptype="Mono.Security.Interface.CipherSuiteCode">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_CipherSuiteCode()" attrib="2182" returntype="Mono.Security.Interface.CipherSuiteCode">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CipherSuiteCode(Mono.Security.Interface.CipherSuiteCode)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.CipherSuiteCode" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ExchangeAlgorithmType" attrib="0" ptype="Mono.Security.Interface.ExchangeAlgorithmType">
                <methods>
                  <method name="get_ExchangeAlgorithmType()" attrib="2182" returntype="Mono.Security.Interface.ExchangeAlgorithmType">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ExchangeAlgorithmType(Mono.Security.Interface.ExchangeAlgorithmType)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.ExchangeAlgorithmType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="HashAlgorithmType" attrib="0" ptype="Mono.Security.Interface.HashAlgorithmType">
                <methods>
                  <method name="get_HashAlgorithmType()" attrib="2182" returntype="Mono.Security.Interface.HashAlgorithmType">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_HashAlgorithmType(Mono.Security.Interface.HashAlgorithmType)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.HashAlgorithmType" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PeerDomainName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_PeerDomainName()" attrib="2182" returntype="System.String">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_PeerDomainName(System.String)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ProtocolVersion" attrib="0" ptype="Mono.Security.Interface.TlsProtocols">
                <methods>
                  <method name="get_ProtocolVersion()" attrib="2182" returntype="Mono.Security.Interface.TlsProtocols">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ProtocolVersion(Mono.Security.Interface.TlsProtocols)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.TlsProtocols" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MonoTlsProvider" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="ID" attrib="0" ptype="System.Guid">
                <methods>
                  <method name="get_ID()" attrib="3526" abstract="true" virtual="true" returntype="System.Guid">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="3526" abstract="true" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SupportedProtocols" attrib="0" ptype="System.Security.Authentication.SslProtocols">
                <methods>
                  <method name="get_SupportedProtocols()" attrib="3526" abstract="true" virtual="true" returntype="System.Security.Authentication.SslProtocols">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SupportsConnectionInfo" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_SupportsConnectionInfo()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SupportsMonoExtensions" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_SupportsMonoExtensions()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SupportsSslStream" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_SupportsSslStream()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateSslStream(System.IO.Stream, System.Boolean, Mono.Security.Interface.MonoTlsSettings)" attrib="1478" abstract="true" virtual="true" returntype="Mono.Security.Interface.IMonoSslStream">
                <parameters>
                  <parameter name="innerStream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="leaveInnerStreamOpen" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="settings" position="2" attrib="4112" type="Mono.Security.Interface.MonoTlsSettings" optional="true" defaultValue="NULL" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MonoTlsProviderFactory" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="IsInitialized" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsInitialized()" attrib="2198" static="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateHttpListener(System.Security.Cryptography.X509Certificates.X509Certificate, Mono.Security.Interface.MonoTlsProvider, Mono.Security.Interface.MonoTlsSettings)" attrib="150" static="true" returntype="System.Net.HttpListener">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="provider" position="1" attrib="4112" type="Mono.Security.Interface.MonoTlsProvider" optional="true" defaultValue="NULL" />
                  <parameter name="settings" position="2" attrib="4112" type="Mono.Security.Interface.MonoTlsSettings" optional="true" defaultValue="NULL" />
                </parameters>
              </method>
              <method name="CreateHttpsRequest(System.Uri, Mono.Security.Interface.MonoTlsProvider, Mono.Security.Interface.MonoTlsSettings)" attrib="150" static="true" returntype="System.Net.HttpWebRequest">
                <parameters>
                  <parameter name="requestUri" position="0" attrib="0" type="System.Uri" />
                  <parameter name="provider" position="1" attrib="0" type="Mono.Security.Interface.MonoTlsProvider" />
                  <parameter name="settings" position="2" attrib="4112" type="Mono.Security.Interface.MonoTlsSettings" optional="true" defaultValue="NULL" />
                </parameters>
              </method>
              <method name="GetMonoSslStream(System.Net.HttpListenerContext)" attrib="150" static="true" returntype="Mono.Security.Interface.IMonoSslStream">
                <parameters>
                  <parameter name="context" position="0" attrib="0" type="System.Net.HttpListenerContext" />
                </parameters>
              </method>
              <method name="GetMonoSslStream(System.Net.Security.SslStream)" attrib="150" static="true" returntype="Mono.Security.Interface.IMonoSslStream">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.Net.Security.SslStream" />
                </parameters>
              </method>
              <method name="GetProvider()" attrib="150" static="true" returntype="Mono.Security.Interface.MonoTlsProvider">
                <parameters />
              </method>
              <method name="GetProvider(System.String)" attrib="150" static="true" returntype="Mono.Security.Interface.MonoTlsProvider">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Initialize()" attrib="150" static="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Initialize(System.String)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="IsProviderSupported(System.String)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="provider" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MonoTlsSettings" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CallbackNeedsCertificateChain" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CallbackNeedsCertificateChain()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CallbackNeedsCertificateChain(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CertificateValidationTime" attrib="0" ptype="System.Nullable`1[System.DateTime]">
                <methods>
                  <method name="get_CertificateValidationTime()" attrib="2182" returntype="System.Nullable`1[System.DateTime]">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_CertificateValidationTime(System.Nullable`1[System.DateTime])" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Nullable`1[System.DateTime]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CertificateValidator" attrib="0" ptype="Mono.Security.Interface.ICertificateValidator">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Do not use outside System.dll!" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_CertificateValidator()" attrib="2182" returntype="Mono.Security.Interface.ICertificateValidator">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CheckCertificateName" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CheckCertificateName()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CheckCertificateName(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CheckCertificateRevocationStatus" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CheckCertificateRevocationStatus()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CheckCertificateRevocationStatus(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ClientCertificateIssuers" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_ClientCertificateIssuers()" attrib="2182" returntype="System.String[]">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ClientCertificateIssuers(System.String[])" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ClientCertificateSelectionCallback" attrib="0" ptype="Mono.Security.Interface.MonoLocalCertificateSelectionCallback">
                <methods>
                  <method name="get_ClientCertificateSelectionCallback()" attrib="2182" returntype="Mono.Security.Interface.MonoLocalCertificateSelectionCallback">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_ClientCertificateSelectionCallback(Mono.Security.Interface.MonoLocalCertificateSelectionCallback)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.MonoLocalCertificateSelectionCallback" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DefaultSettings" attrib="0" ptype="Mono.Security.Interface.MonoTlsSettings">
                <methods>
                  <method name="get_DefaultSettings()" attrib="2198" static="true" returntype="Mono.Security.Interface.MonoTlsSettings">
                    <parameters />
                  </method>
                  <method name="set_DefaultSettings(Mono.Security.Interface.MonoTlsSettings)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.MonoTlsSettings" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DisallowUnauthenticatedCertificateRequest" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_DisallowUnauthenticatedCertificateRequest()" attrib="2182" returntype="System.Boolean">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_DisallowUnauthenticatedCertificateRequest(System.Boolean)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EnabledCiphers" attrib="0" ptype="Mono.Security.Interface.CipherSuiteCode[]">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_EnabledCiphers()" attrib="2182" returntype="Mono.Security.Interface.CipherSuiteCode[]">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_EnabledCiphers(Mono.Security.Interface.CipherSuiteCode[])" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.CipherSuiteCode[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="EnabledProtocols" attrib="0" ptype="System.Nullable`1[Mono.Security.Interface.TlsProtocols]">
                <methods>
                  <method name="get_EnabledProtocols()" attrib="2182" returntype="System.Nullable`1[Mono.Security.Interface.TlsProtocols]">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_EnabledProtocols(System.Nullable`1[Mono.Security.Interface.TlsProtocols])" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Nullable`1[Mono.Security.Interface.TlsProtocols]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RemoteCertificateValidationCallback" attrib="0" ptype="Mono.Security.Interface.MonoRemoteCertificateValidationCallback">
                <methods>
                  <method name="get_RemoteCertificateValidationCallback()" attrib="2182" returntype="Mono.Security.Interface.MonoRemoteCertificateValidationCallback">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_RemoteCertificateValidationCallback(Mono.Security.Interface.MonoRemoteCertificateValidationCallback)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Interface.MonoRemoteCertificateValidationCallback" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SkipSystemValidators" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_SkipSystemValidators()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_SkipSystemValidators(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TrustAnchors" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509CertificateCollection">
                <methods>
                  <method name="get_TrustAnchors()" attrib="2182" returntype="System.Security.Cryptography.X509Certificates.X509CertificateCollection">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_TrustAnchors(System.Security.Cryptography.X509Certificates.X509CertificateCollection)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="UseServicePointManagerCallback" attrib="0" ptype="System.Nullable`1[System.Boolean]">
                <methods>
                  <method name="get_UseServicePointManagerCallback()" attrib="2182" returntype="System.Nullable`1[System.Boolean]">
                    <parameters />
                  </method>
                  <method name="set_UseServicePointManagerCallback(System.Nullable`1[System.Boolean])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Nullable`1[System.Boolean]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="UserSettings" attrib="0" ptype="System.Object">
                <methods>
                  <method name="get_UserSettings()" attrib="2182" returntype="System.Object">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_UserSettings(System.Object)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clone()" attrib="134" returntype="Mono.Security.Interface.MonoTlsSettings">
                <parameters />
              </method>
              <method name="CloneWithValidator(Mono.Security.Interface.ICertificateValidator)" attrib="134" returntype="Mono.Security.Interface.MonoTlsSettings">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Do not use outside System.dll!" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="validator" position="0" attrib="0" type="Mono.Security.Interface.ICertificateValidator" />
                </parameters>
              </method>
              <method name="CopyDefaultSettings()" attrib="150" static="true" returntype="Mono.Security.Interface.MonoTlsSettings">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TlsException" type="class" base="System.Exception" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(Mono.Security.Interface.Alert)" attrib="6278">
                <parameters>
                  <parameter name="alert" position="0" attrib="0" type="Mono.Security.Interface.Alert" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.Interface.AlertDescription)" attrib="6278">
                <parameters>
                  <parameter name="description" position="0" attrib="0" type="Mono.Security.Interface.AlertDescription" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.Interface.Alert, System.String)" attrib="6278">
                <parameters>
                  <parameter name="alert" position="0" attrib="0" type="Mono.Security.Interface.Alert" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.Interface.AlertDescription, System.String)" attrib="6278">
                <parameters>
                  <parameter name="description" position="0" attrib="0" type="Mono.Security.Interface.AlertDescription" />
                  <parameter name="message" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.Interface.AlertLevel, Mono.Security.Interface.AlertDescription)" attrib="6278">
                <parameters>
                  <parameter name="level" position="0" attrib="0" type="Mono.Security.Interface.AlertLevel" />
                  <parameter name="description" position="1" attrib="0" type="Mono.Security.Interface.AlertDescription" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.Interface.AlertDescription, System.String, System.Object[])" attrib="6278">
                <parameters>
                  <parameter name="description" position="0" attrib="0" type="Mono.Security.Interface.AlertDescription" />
                  <parameter name="format" position="1" attrib="0" type="System.String" />
                  <parameter name="args" position="2" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Alert" attrib="0" ptype="Mono.Security.Interface.Alert">
                <methods>
                  <method name="get_Alert()" attrib="2182" returntype="Mono.Security.Interface.Alert">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="TlsProtocolCode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int16">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Tls10" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocolCode" value="769" />
              <field name="Tls11" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocolCode" value="770" />
              <field name="Tls12" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocolCode" value="771" />
            </fields>
          </class>
          <class name="TlsProtocols" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ClientMask" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="2688" />
              <field name="ServerMask" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="1344" />
              <field name="Tls10" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="192" />
              <field name="Tls10Client" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="128" />
              <field name="Tls10Server" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="64" />
              <field name="Tls11" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="768" />
              <field name="Tls11Client" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="512" />
              <field name="Tls11Server" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="256" />
              <field name="Tls12" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="3072" />
              <field name="Tls12Client" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="2048" />
              <field name="Tls12Server" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="1024" />
              <field name="Zero" attrib="32854" fieldtype="Mono.Security.Interface.TlsProtocols" value="0" />
            </fields>
          </class>
          <class name="ValidationResult" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Boolean, System.Boolean, System.Int32, System.Nullable`1[Mono.Security.Interface.MonoSslPolicyErrors])" attrib="6278">
                <parameters>
                  <parameter name="trusted" position="0" attrib="0" type="System.Boolean" />
                  <parameter name="user_denied" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="error_code" position="2" attrib="0" type="System.Int32" />
                  <parameter name="policy_errors" position="3" attrib="0" type="System.Nullable`1[Mono.Security.Interface.MonoSslPolicyErrors]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ErrorCode" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_ErrorCode()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PolicyErrors" attrib="0" ptype="System.Nullable`1[Mono.Security.Interface.MonoSslPolicyErrors]">
                <methods>
                  <method name="get_PolicyErrors()" attrib="2182" returntype="System.Nullable`1[Mono.Security.Interface.MonoSslPolicyErrors]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Trusted" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Trusted()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UserDenied" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_UserDenied()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Protocol.Ntlm">
        <classes>
          <class name="ChallengeResponse" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute">
                <properties>
                  <property name="Message" value="Use of this API is highly discouraged, it selects legacy-mode LM/NTLM authentication, which sends your password in very weak encryption over the wire even if the server supports the more secure NTLMv2 / NTLMv2 Session. You need to use the new `Type3Message (Type2Message)' constructor to use the more secure NTLMv2 / NTLMv2 Session authentication modes. These require the Type 2 message from the server to compute the response." />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String, System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="password" position="0" attrib="0" type="System.String" />
                  <parameter name="challenge" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Challenge" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Challenge()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Challenge(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LM" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_LM()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NT" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_NT()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Password" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Password()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Password(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="~ChallengeResponse()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ChallengeResponse2" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Compute(Mono.Security.Protocol.Ntlm.Type2Message, Mono.Security.Protocol.Ntlm.NtlmAuthLevel, System.String, System.String, System.String, out System.Byte[]&amp;, out System.Byte[]&amp;)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="type2" position="0" attrib="0" type="Mono.Security.Protocol.Ntlm.Type2Message" />
                  <parameter name="level" position="1" attrib="0" type="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" />
                  <parameter name="username" position="2" attrib="0" type="System.String" />
                  <parameter name="password" position="3" attrib="0" type="System.String" />
                  <parameter name="domain" position="4" attrib="0" type="System.String" />
                  <parameter name="lm" position="5" attrib="2" type="System.Byte[]" direction="out" />
                  <parameter name="ntlm" position="6" attrib="2" type="System.Byte[]" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MessageBase" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Int32)" attrib="6276">
                <parameters>
                  <parameter name="messageType" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Flags" attrib="0" ptype="Mono.Security.Protocol.Ntlm.NtlmFlags">
                <methods>
                  <method name="get_Flags()" attrib="2182" returntype="Mono.Security.Protocol.Ntlm.NtlmFlags">
                    <parameters />
                  </method>
                  <method name="set_Flags(Mono.Security.Protocol.Ntlm.NtlmFlags)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Ntlm.NtlmFlags" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Type()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CheckHeader(System.Byte[])" attrib="132" returntype="System.Boolean">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Decode(System.Byte[])" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="1478" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="PrepareMessage(System.Int32)" attrib="132" returntype="System.Byte[]">
                <parameters>
                  <parameter name="messageSize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="NtlmAuthLevel" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="LM_and_NTLM" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" value="0" />
              <field name="LM_and_NTLM_and_try_NTLMv2_Session" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" value="1" />
              <field name="NTLM_only" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" value="2" />
              <field name="NTLMv2_only" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" value="3" />
            </fields>
          </class>
          <class name="NtlmFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Negotiate128" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="536870912" />
              <field name="Negotiate56" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="-2147483648" />
              <field name="NegotiateAlwaysSign" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="32768" />
              <field name="NegotiateDomainSupplied" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="4096" />
              <field name="NegotiateNtlm" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="512" />
              <field name="NegotiateNtlm2Key" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="524288" />
              <field name="NegotiateOem" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="2" />
              <field name="NegotiateUnicode" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="1" />
              <field name="NegotiateWorkstationSupplied" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="8192" />
              <field name="RequestTarget" attrib="32854" fieldtype="Mono.Security.Protocol.Ntlm.NtlmFlags" value="4" />
            </fields>
          </class>
          <class name="NtlmSettings" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="DefaultAuthLevel" attrib="0" ptype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel">
                <methods>
                  <method name="get_DefaultAuthLevel()" attrib="2198" static="true" returntype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel">
                    <parameters />
                  </method>
                  <method name="set_DefaultAuthLevel(Mono.Security.Protocol.Ntlm.NtlmAuthLevel)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="Type1Message" type="class" base="Mono.Security.Protocol.Ntlm.MessageBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Domain" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Domain()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Domain(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Host" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Host()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Host(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode(System.Byte[])" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Type2Message" type="class" base="Mono.Security.Protocol.Ntlm.MessageBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Nonce" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Nonce()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Nonce(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TargetInfo" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_TargetInfo()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TargetName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TargetName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode(System.Byte[])" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="~Type2Message()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Type3Message" type="class" base="Mono.Security.Protocol.Ntlm.MessageBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use of this API is highly discouraged, it selects legacy-mode LM/NTLM authentication, which sends your password in very weak encryption over the wire even if the server supports the more secure NTLMv2 / NTLMv2 Session. You need to use the new `Type3Message (Type2Message)' constructor to use the more secure NTLMv2 / NTLMv2 Session authentication modes. These require the Type 2 message from the server to compute the response." />
                    </properties>
                  </attribute>
                </attributes>
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.Protocol.Ntlm.Type2Message)" attrib="6278">
                <parameters>
                  <parameter name="type2" position="0" attrib="0" type="Mono.Security.Protocol.Ntlm.Type2Message" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Challenge" attrib="0" ptype="System.Byte[]">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use of this API is highly discouraged, it selects legacy-mode LM/NTLM authentication, which sends your password in very weak encryption over the wire even if the server supports the more secure NTLMv2 / NTLMv2 Session. You need to use the new `Type3Message (Type2Message)' constructor to use the more secure NTLMv2 / NTLMv2 Session authentication modes. These require the Type 2 message from the server to compute the response." />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_Challenge()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Challenge(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="DefaultAuthLevel" attrib="0" ptype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" value="Use NtlmSettings.DefaultAuthLevel" />
                    </properties>
                  </attribute>
                </attributes>
                <methods>
                  <method name="get_DefaultAuthLevel()" attrib="2198" static="true" returntype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel">
                    <parameters />
                  </method>
                  <method name="set_DefaultAuthLevel(Mono.Security.Protocol.Ntlm.NtlmAuthLevel)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Domain" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Domain()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Domain(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Host" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Host()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Host(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="LM" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_LM()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Level" attrib="0" ptype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel">
                <methods>
                  <method name="get_Level()" attrib="2182" returntype="Mono.Security.Protocol.Ntlm.NtlmAuthLevel">
                    <parameters />
                  </method>
                  <method name="set_Level(Mono.Security.Protocol.Ntlm.NtlmAuthLevel)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Ntlm.NtlmAuthLevel" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NT" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_NT()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_NT(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Password" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Password()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Password(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Username" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Username()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Username(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode(System.Byte[])" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="~Type3Message()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.X509">
        <classes>
          <class name="PKCS12" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
            </interfaces>
            <fields>
              <field name="CryptoApiPasswordLimit" attrib="32854" fieldtype="System.Int32" value="32" />
              <field name="certBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.3" />
              <field name="crlBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.4" />
              <field name="keyBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.1" />
              <field name="pbeWithSHAAnd128BitRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.5" />
              <field name="pbeWithSHAAnd128BitRC4" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.1" />
              <field name="pbeWithSHAAnd2KeyTripleDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.4" />
              <field name="pbeWithSHAAnd3KeyTripleDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.3" />
              <field name="pbeWithSHAAnd40BitRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.6" />
              <field name="pbeWithSHAAnd40BitRC4" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.2" />
              <field name="pkcs8ShroudedKeyBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.2" />
              <field name="safeContentsBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.6" />
              <field name="sdsiCertificate" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.22.2" />
              <field name="secretBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.5" />
              <field name="x509Certificate" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.22.1" />
              <field name="x509Crl" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.23.1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.String)" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IterationCount" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_IterationCount()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_IterationCount(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Keys" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Keys()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaximumPasswordLength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_MaximumPasswordLength()" attrib="2198" static="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_MaximumPasswordLength(System.Int32)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Password" attrib="0" ptype="System.String">
                <methods>
                  <method name="set_Password(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Secrets" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Secrets()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddCertificate(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="AddCertificate(Mono.Security.X509.X509Certificate, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="AddKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="AddKeyBag(System.Security.Cryptography.AsymmetricAlgorithm, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="AddPkcs8ShroudedKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="AddPkcs8ShroudedKeyBag(System.Security.Cryptography.AsymmetricAlgorithm, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="AddSecretBag(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="secret" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="AddSecretBag(System.Byte[], System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="secret" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="Decrypt(Mono.Security.PKCS7+EncryptedData)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="ed" position="0" attrib="0" type="Mono.Security.PKCS7+EncryptedData" />
                </parameters>
              </method>
              <method name="Decrypt(System.String, System.Byte[], System.Int32, System.Byte[])" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="algorithmOid" position="0" attrib="0" type="System.String" />
                  <parameter name="salt" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="iterationCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="encryptedData" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Encrypt(System.String, System.Byte[], System.Int32, System.Byte[])" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="algorithmOid" position="0" attrib="0" type="System.String" />
                  <parameter name="salt" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="iterationCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="data" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetAsymmetricAlgorithm(System.Collections.IDictionary)" attrib="134" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                <parameters>
                  <parameter name="attrs" position="0" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="GetAttributes(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Collections.IDictionary">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="GetAttributes(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Collections.IDictionary">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetCertificate(System.Collections.IDictionary)" attrib="134" returntype="Mono.Security.X509.X509Certificate">
                <parameters>
                  <parameter name="attrs" position="0" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="GetSecret(System.Collections.IDictionary)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="attrs" position="0" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="LoadFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.X509.PKCS12">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LoadFromFile(System.String, System.String)" attrib="150" static="true" returntype="Mono.Security.X509.PKCS12">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveCertificate(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="RemoveCertificate(Mono.Security.X509.X509Certificate, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                  <parameter name="attrs" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="RemoveKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="RemovePkcs8ShroudedKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="RemoveSecretBag(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="secret" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SaveToFile(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="~PKCS12()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="DeriveBytes" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
                <properties>
                  <property name="HashName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_HashName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_HashName(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="IterationCount" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_IterationCount()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                      <method name="set_IterationCount(System.Int32)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Int32" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Password" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Password()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Password(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Salt" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Salt()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Salt(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="DeriveIV(System.Int32)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="size" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="DeriveKey(System.Int32)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="size" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="DeriveMAC(System.Int32)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="size" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
                <classes>
                  <class name="Purpose" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                    <interfaces>
                      <interface name="System.IComparable" />
                      <interface name="System.IConvertible" />
                      <interface name="System.IFormattable" />
                    </interfaces>
                    <fields>
                      <field name="IV" attrib="32854" fieldtype="Mono.Security.X509.PKCS12+DeriveBytes+Purpose" value="1" />
                      <field name="Key" attrib="32854" fieldtype="Mono.Security.X509.PKCS12+DeriveBytes+Purpose" value="0" />
                      <field name="MAC" attrib="32854" fieldtype="Mono.Security.X509.PKCS12+DeriveBytes+Purpose" value="2" />
                    </fields>
                  </class>
                </classes>
              </class>
            </classes>
          </class>
          <class name="PKCS5" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="pbeWithMD2AndDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.1" />
              <field name="pbeWithMD2AndRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.4" />
              <field name="pbeWithMD5AndDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.3" />
              <field name="pbeWithMD5AndRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.6" />
              <field name="pbeWithSHA1AndDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.10" />
              <field name="pbeWithSHA1AndRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.11" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="PKCS9" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="friendlyName" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.20" />
              <field name="localKeyId" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.21" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="X501" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="FromString(System.String)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="rdn" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="seq" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="ToString(Mono.Security.ASN1, System.Boolean, System.String, System.Boolean)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="seq" position="0" attrib="0" type="Mono.Security.ASN1" />
                  <parameter name="reversed" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="separator" position="2" attrib="0" type="System.String" />
                  <parameter name="quotes" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509Builder" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Hash" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Hash(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetOid(System.String)" attrib="132" returntype="System.String">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Sign(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="Sign(System.Security.Cryptography.DSA)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                </parameters>
              </method>
              <method name="Sign(System.Security.Cryptography.RSA)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </method>
              <method name="ToBeSigned(System.String)" attrib="1476" abstract="true" virtual="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509Certificate" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DSA" attrib="0" ptype="System.Security.Cryptography.DSA">
                <methods>
                  <method name="get_DSA()" attrib="2182" returntype="System.Security.Cryptography.DSA">
                    <parameters />
                  </method>
                  <method name="set_DSA(System.Security.Cryptography.DSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                <methods>
                  <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCurrent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCurrent()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSelfSigned" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSelfSigned()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_IssuerName()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerUniqueIdentifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_IssuerUniqueIdentifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyAlgorithm()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyAlgorithmParameters" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_KeyAlgorithmParameters()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_KeyAlgorithmParameters(System.Byte[])" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PublicKey" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_PublicKey()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2502" virtual="true" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RawData" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_RawData()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SerialNumber()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Signature()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithmParameters" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SignatureAlgorithmParameters()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SubjectName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SubjectName()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SubjectUniqueIdentifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SubjectUniqueIdentifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValidFrom" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ValidFrom()" attrib="2502" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValidUntil" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ValidUntil()" attrib="2502" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CheckSignature(System.Byte[], System.String, System.Byte[])" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="hash" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="hashAlgorithm" position="1" attrib="0" type="System.String" />
                  <parameter name="signature" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetIssuerName()" attrib="134" returntype="Mono.Security.ASN1">
                <parameters />
              </method>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16838" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
              <method name="GetSubjectName()" attrib="134" returntype="Mono.Security.ASN1">
                <parameters />
              </method>
              <method name="VerifySignature(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="WasCurrent(System.DateTime)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="instant" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509CertificateBuilder" type="class" base="Mono.Security.X509.X509Builder" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte)" attrib="6278">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                <methods>
                  <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_IssuerName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_IssuerName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IssuerUniqueId" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_IssuerUniqueId()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_IssuerUniqueId(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NotAfter" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotAfter()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                  <method name="set_NotAfter(System.DateTime)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NotBefore" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotBefore()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                  <method name="set_NotBefore(System.DateTime)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SerialNumber()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_SerialNumber(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SubjectName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SubjectName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_SubjectName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SubjectPublicKey" attrib="0" ptype="System.Security.Cryptography.AsymmetricAlgorithm">
                <methods>
                  <method name="get_SubjectPublicKey()" attrib="2182" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                    <parameters />
                  </method>
                  <method name="set_SubjectPublicKey(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SubjectUniqueId" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SubjectUniqueId()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_SubjectUniqueId(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Byte">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Byte">
                    <parameters />
                  </method>
                  <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToBeSigned(System.String)" attrib="196" virtual="true" is-override="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509CertificateCollection" type="class" base="System.Collections.CollectionBase" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509CertificateCollection)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Certificate[])" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Certificate" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, Mono.Security.X509.X509Certificate)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="Mono.Security.X509.X509Certificate" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509CertificateCollection)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509Certificate[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate[]" />
                </parameters>
              </method>
              <method name="Contains(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="CopyTo(Mono.Security.X509.X509Certificate[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="Mono.Security.X509.X509Certificate[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="Mono.Security.X509.X509CertificateCollection+X509CertificateEnumerator">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="IndexOf(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="X509CertificateEnumerator" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="System.Collections.IEnumerator" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor(Mono.Security.X509.X509CertificateCollection)" attrib="6278">
                    <parameters>
                      <parameter name="mappings" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Current" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                    <methods>
                      <method name="get_Current()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="MoveNext()" attrib="134" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="Reset()" attrib="134" returntype="System.Void">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="X509Chain" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509CertificateCollection)" attrib="6278">
                <parameters>
                  <parameter name="chain" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Chain" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Chain()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Root" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                <methods>
                  <method name="get_Root()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Status" attrib="0" ptype="Mono.Security.X509.X509ChainStatusFlags">
                <methods>
                  <method name="get_Status()" attrib="2182" returntype="Mono.Security.X509.X509ChainStatusFlags">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustAnchors" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_TrustAnchors()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                  <method name="set_TrustAnchors(Mono.Security.X509.X509CertificateCollection)" attrib="18566" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Build(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="leaf" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="FindByIssuerName(System.String)" attrib="134" returntype="Mono.Security.X509.X509Certificate">
                <parameters>
                  <parameter name="issuerName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LoadCertificate(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="LoadCertificates(Mono.Security.X509.X509CertificateCollection)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </method>
              <method name="Reset()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="X509ChainStatusFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="InvalidBasicConstraints" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="1024" />
              <field name="NoError" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="0" />
              <field name="NotSignatureValid" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="8" />
              <field name="NotTimeNested" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="2" />
              <field name="NotTimeValid" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="1" />
              <field name="PartialChain" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="65536" />
              <field name="UntrustedRoot" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="32" />
            </fields>
          </class>
          <class name="X509Crl" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="crl" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Entries" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Entries()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                <methods>
                  <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCurrent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCurrent()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_IssuerName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Crl+X509CrlEntry" params="System.Byte[]">
                <methods>
                  <method name="get_Item(System.Byte[])" attrib="2182" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                    <parameters>
                      <parameter name="serialNumber" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Crl+X509CrlEntry" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NextUpdate" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NextUpdate()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RawData" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_RawData()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Signature()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ThisUpdate" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ThisUpdate()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Byte">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Byte">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.X509.X509Crl">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetCrlEntry(Mono.Security.X509.X509Certificate)" attrib="134" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="GetCrlEntry(System.Byte[])" attrib="134" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                <parameters>
                  <parameter name="serialNumber" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="VerifySignature(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="VerifySignature(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="WasCurrent(System.DateTime)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="instant" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="X509CrlEntry" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <properties>
                  <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                    <methods>
                      <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="RevocationDate" attrib="0" ptype="System.DateTime">
                    <methods>
                      <method name="get_RevocationDate()" attrib="2182" returntype="System.DateTime">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SerialNumber()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="X509Extension" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="extnCritical" attrib="4" fieldtype="System.Boolean" />
              <field name="extnOid" attrib="4" fieldtype="System.String" />
              <field name="extnValue" attrib="4" fieldtype="Mono.Security.ASN1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                <methods>
                  <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Critical" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Critical()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Critical(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Oid" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Oid()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="Mono.Security.ASN1">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="Mono.Security.ASN1">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="452" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="452" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="X509ExtensionCollection" type="class" base="System.Collections.CollectionBase" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Extension" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.X509.X509Extension">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Extension" params="System.String">
                <methods>
                  <method name="get_Item(System.String)" attrib="2182" returntype="Mono.Security.X509.X509Extension">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509ExtensionCollection)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="Mono.Security.X509.X509ExtensionCollection" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509Extension[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension[]" />
                </parameters>
              </method>
              <method name="Contains(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="Contains(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CopyTo(Mono.Security.X509.X509Extension[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="extensions" position="0" attrib="0" type="Mono.Security.X509.X509Extension[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="IndexOf(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="IndexOf(System.String)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="extension" position="1" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="Remove(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509Store" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Crls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Crls()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Import(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Import(Mono.Security.X509.X509Crl)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="crl" position="0" attrib="0" type="Mono.Security.X509.X509Crl" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Crl)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="crl" position="0" attrib="0" type="Mono.Security.X509.X509Crl" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509StoreManager" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="CurrentUser" attrib="0" ptype="Mono.Security.X509.X509Stores">
                <methods>
                  <method name="get_CurrentUser()" attrib="2198" static="true" returntype="Mono.Security.X509.X509Stores">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IntermediateCACertificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_IntermediateCACertificates()" attrib="2198" static="true" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IntermediateCACrls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_IntermediateCACrls()" attrib="2198" static="true" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalMachine" attrib="0" ptype="Mono.Security.X509.X509Stores">
                <methods>
                  <method name="get_LocalMachine()" attrib="2198" static="true" returntype="Mono.Security.X509.X509Stores">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewCurrentUser" attrib="0" ptype="Mono.Security.X509.X509Stores">
                <methods>
                  <method name="get_NewCurrentUser()" attrib="2198" static="true" returntype="Mono.Security.X509.X509Stores">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NewLocalMachine" attrib="0" ptype="Mono.Security.X509.X509Stores">
                <methods>
                  <method name="get_NewLocalMachine()" attrib="2198" static="true" returntype="Mono.Security.X509.X509Stores">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustedRootCACrls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_TrustedRootCACrls()" attrib="2198" static="true" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustedRootCertificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_TrustedRootCertificates()" attrib="2198" static="true" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UntrustedCertificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_UntrustedCertificates()" attrib="2198" static="true" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="X509Stores" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <properties>
              <property name="IntermediateCA" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_IntermediateCA()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OtherPeople" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_OtherPeople()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Personal" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_Personal()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustedRoot" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_TrustedRoot()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Untrusted" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_Untrusted()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Open(System.String, System.Boolean)" attrib="134" returntype="Mono.Security.X509.X509Store">
                <parameters>
                  <parameter name="storeName" position="0" attrib="0" type="System.String" />
                  <parameter name="create" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="Names" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <fields>
                  <field name="IntermediateCA" attrib="32854" fieldtype="System.String" value="CA" />
                  <field name="OtherPeople" attrib="32854" fieldtype="System.String" value="AddressBook" />
                  <field name="Personal" attrib="32854" fieldtype="System.String" value="My" />
                  <field name="TrustedRoot" attrib="32854" fieldtype="System.String" value="Trust" />
                  <field name="Untrusted" attrib="32854" fieldtype="System.String" value="Disallowed" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
            </classes>
          </class>
          <class name="X520" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <classes>
              <class name="AttributeTypeAndValue" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(System.String, System.Int32)" attrib="6276">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                      <parameter name="upperBound" position="1" attrib="0" type="System.Int32" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String, System.Int32, System.Byte)" attrib="6276">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                      <parameter name="upperBound" position="1" attrib="0" type="System.Int32" />
                      <parameter name="encoding" position="2" attrib="0" type="System.Byte" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Value" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Value()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_Value(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="GetBytes(System.Byte)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="encoding" position="0" attrib="0" type="System.Byte" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="CommonName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="CountryName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="DnQualifier" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="DomainComponent" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="EmailAddress" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="GivenName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Initial" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="LocalityName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Name" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Oid" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(System.String)" attrib="6278">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                </constructors>
              </class>
              <class name="OrganizationName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="OrganizationalUnitName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="SerialNumber" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="StateOrProvinceName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Surname" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Title" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="UserId" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
            </classes>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.X509.Extensions">
        <classes>
          <class name="AuthorityKeyIdentifierExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Identifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Identifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Identifier(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="BasicConstraintsExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <fields>
              <field name="NoPathLengthConstraint" attrib="32854" fieldtype="System.Int32" value="-1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CertificateAuthority" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CertificateAuthority()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CertificateAuthority(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PathLenConstraint" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_PathLenConstraint()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_PathLenConstraint(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="CRLDistributionPointsExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DistributionPoints" attrib="0" ptype="System.Collections.Generic.IEnumerable`1[Mono.Security.X509.Extensions.CRLDistributionPointsExtension+DistributionPoint]">
                <methods>
                  <method name="get_DistributionPoints()" attrib="2182" returntype="System.Collections.Generic.IEnumerable`1[Mono.Security.X509.Extensions.CRLDistributionPointsExtension+DistributionPoint]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="DistributionPoint" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="dp" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String, Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags, System.String)" attrib="6278">
                    <parameters>
                      <parameter name="dp" position="0" attrib="0" type="System.String" />
                      <parameter name="reasons" position="1" attrib="0" type="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" />
                      <parameter name="issuer" position="2" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="CRLIssuer" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_CRLIssuer()" attrib="2182" returntype="System.String">
                        <attributes>
                          <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                        </attributes>
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Name" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Name()" attrib="2182" returntype="System.String">
                        <attributes>
                          <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                        </attributes>
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Reasons" attrib="0" ptype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags">
                    <methods>
                      <method name="get_Reasons()" attrib="2182" returntype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags">
                        <attributes>
                          <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                        </attributes>
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
              </class>
              <class name="ReasonFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <attributes>
                  <attribute name="System.FlagsAttribute" />
                </attributes>
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="AACompromise" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="8" />
                  <field name="AffiliationChanged" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="3" />
                  <field name="CACompromise" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="2" />
                  <field name="CertificateHold" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="6" />
                  <field name="CessationOfOperation" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="5" />
                  <field name="KeyCompromise" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="1" />
                  <field name="PrivilegeWithdrawn" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="7" />
                  <field name="Superseded" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="4" />
                  <field name="Unused" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="0" />
                </fields>
              </class>
            </classes>
          </class>
          <class name="CertificatePoliciesExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ExtendedKeyUsageExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyPurpose" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_KeyPurpose()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyAttributesExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyIdentifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_KeyIdentifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NotAfter" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotAfter()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NotBefore" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotBefore()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Support(Mono.Security.X509.Extensions.KeyUsages)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="usage" position="0" attrib="0" type="Mono.Security.X509.Extensions.KeyUsages" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyUsageExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyUsage" attrib="0" ptype="Mono.Security.X509.Extensions.KeyUsages">
                <methods>
                  <method name="get_KeyUsage()" attrib="2182" returntype="Mono.Security.X509.Extensions.KeyUsages">
                    <parameters />
                  </method>
                  <method name="set_KeyUsage(Mono.Security.X509.Extensions.KeyUsages)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.Extensions.KeyUsages" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Support(Mono.Security.X509.Extensions.KeyUsages)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="usage" position="0" attrib="0" type="Mono.Security.X509.Extensions.KeyUsages" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyUsages" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="cRLSign" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="2" />
              <field name="dataEncipherment" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="16" />
              <field name="decipherOnly" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="2048" />
              <field name="digitalSignature" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="128" />
              <field name="encipherOnly" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="1" />
              <field name="keyAgreement" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="8" />
              <field name="keyCertSign" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="4" />
              <field name="keyEncipherment" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="32" />
              <field name="nonRepudiation" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="64" />
              <field name="none" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="0" />
            </fields>
          </class>
          <class name="NetscapeCertTypeExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Support(Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="usage" position="0" attrib="0" type="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="CertTypes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <attributes>
                  <attribute name="System.FlagsAttribute" />
                </attributes>
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="ObjectSigning" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="16" />
                  <field name="ObjectSigningCA" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="1" />
                  <field name="Smime" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="32" />
                  <field name="SmimeCA" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="2" />
                  <field name="SslCA" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="4" />
                  <field name="SslClient" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="128" />
                  <field name="SslServer" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="64" />
                </fields>
              </class>
            </classes>
          </class>
          <class name="PrivateKeyUsagePeriodExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SubjectAltNameExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String[], System.String[], System.String[], System.String[])" attrib="6278">
                <parameters>
                  <parameter name="rfc822" position="0" attrib="0" type="System.String[]" />
                  <parameter name="dnsNames" position="1" attrib="0" type="System.String[]" />
                  <parameter name="ipAddresses" position="2" attrib="0" type="System.String[]" />
                  <parameter name="uris" position="3" attrib="0" type="System.String[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DNSNames" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_DNSNames()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IPAddresses" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_IPAddresses()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RFC822" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_RFC822()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UniformResourceIdentifiers" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_UniformResourceIdentifiers()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SubjectKeyIdentifierExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Identifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Identifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Identifier(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Xml">
        <classes>
          <class name="MiniParser" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="col" attrib="4" fieldtype="System.Int32" />
              <field name="errors" attrib="20" fieldtype="System.String[]" />
              <field name="line" attrib="4" fieldtype="System.Int32" />
              <field name="splitCData" attrib="4" fieldtype="System.Boolean" />
              <field name="twoCharBuff" attrib="4" fieldtype="System.Int32[]" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="FatalErr(System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="descr" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(Mono.Xml.MiniParser+IReader, Mono.Xml.MiniParser+IHandler)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="Mono.Xml.MiniParser+IReader" />
                  <parameter name="handler" position="1" attrib="0" type="Mono.Xml.MiniParser+IHandler" />
                </parameters>
              </method>
              <method name="Reset()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="StrEquals(System.String, System.Text.StringBuilder, System.Int32, System.Int32)" attrib="148" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                  <parameter name="sb" position="1" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="sbStart" position="2" attrib="0" type="System.Int32" />
                  <parameter name="len" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Xlat(System.Int32, System.Int32)" attrib="148" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="charCode" position="0" attrib="0" type="System.Int32" />
                  <parameter name="state" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="AttrListImpl" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="Mono.Xml.MiniParser+IAttrList" />
                  <interface name="Mono.Xml.MiniParser+IMutableAttrList" />
                </interfaces>
                <fields>
                  <field name="names" attrib="4" fieldtype="System.Collections.ArrayList" />
                  <field name="values" attrib="4" fieldtype="System.Collections.ArrayList" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Xml.MiniParser+IAttrList)" attrib="6278">
                    <parameters>
                      <parameter name="attrs" position="0" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Int32)" attrib="6278">
                    <parameters>
                      <parameter name="initialCapacity" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="IsEmpty" attrib="0" ptype="System.Boolean">
                    <methods>
                      <method name="get_IsEmpty()" attrib="2534" virtual="true" returntype="System.Boolean">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Length" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Length()" attrib="2534" virtual="true" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Names" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Names()" attrib="2534" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Values" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Values()" attrib="2534" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="Add(System.String, System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="value" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="ChangeValue(System.String, System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="newValue" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="Clear()" attrib="486" virtual="true" returntype="System.Void">
                    <parameters />
                  </method>
                  <method name="CopyFrom(Mono.Xml.MiniParser+IAttrList)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="attrs" position="0" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="GetName(System.Int32)" attrib="486" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.Int32)" attrib="486" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.String)" attrib="486" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="Remove(System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="Remove(System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="HandlerAdapter" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="Mono.Xml.MiniParser+IHandler" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
                <methods>
                  <method name="OnChars(System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="ch" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndElement(System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                  <method name="OnStartElement(System.String, Mono.Xml.MiniParser+IAttrList)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="attrs" position="1" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="OnStartParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IAttrList" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <properties>
                  <property name="IsEmpty" attrib="0" ptype="System.Boolean">
                    <methods>
                      <method name="get_IsEmpty()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Length" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Length()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Names" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Names()" attrib="3526" abstract="true" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Values" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Values()" attrib="3526" abstract="true" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="ChangeValue(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="newValue" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="GetName(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IHandler" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <methods>
                  <method name="OnChars(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="ch" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndElement(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndParsing(Mono.Xml.MiniParser)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                  <method name="OnStartElement(System.String, Mono.Xml.MiniParser+IAttrList)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="attrs" position="1" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="OnStartParsing(Mono.Xml.MiniParser)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IMutableAttrList" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="Mono.Xml.MiniParser+IAttrList" />
                </interfaces>
                <methods>
                  <method name="Add(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="value" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="Clear()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters />
                  </method>
                  <method name="CopyFrom(Mono.Xml.MiniParser+IAttrList)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="attrs" position="0" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="Remove(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="Remove(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IReader" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <methods>
                  <method name="Read()" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="XMLError" type="class" base="System.Exception" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="System.Runtime.Serialization.ISerializable" />
                </interfaces>
                <fields>
                  <field name="column" attrib="4" fieldtype="System.Int32" />
                  <field name="descr" attrib="4" fieldtype="System.String" />
                  <field name="line" attrib="4" fieldtype="System.Int32" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(System.String)" attrib="6278">
                    <parameters>
                      <parameter name="descr" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String, System.Int32, System.Int32)" attrib="6278">
                    <parameters>
                      <parameter name="descr" position="0" attrib="0" type="System.String" />
                      <parameter name="line" position="1" attrib="0" type="System.Int32" />
                      <parameter name="column" position="2" attrib="0" type="System.Int32" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Column" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Column()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Line" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Line()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="SecurityParser" type="class" base="Mono.Xml.MiniParser" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="Mono.Xml.MiniParser+IHandler" />
              <interface name="Mono.Xml.MiniParser+IReader" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="LoadXml(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="xml" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OnChars(System.String)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OnEndElement(System.String)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OnEndParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                </parameters>
              </method>
              <method name="OnStartElement(System.String, Mono.Xml.MiniParser+IAttrList)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attrs" position="1" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                </parameters>
              </method>
              <method name="OnStartParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                </parameters>
              </method>
              <method name="Read()" attrib="486" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToXml()" attrib="134" returntype="System.Security.SecurityElement">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>